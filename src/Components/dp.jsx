/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { Light } from 'three';

function Model(props) {
  const { nodes, materials } = useGLTF('/model/untitled.glb')
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow={true}
        receiveShadow
        geometry={nodes.Cylinder.geometry}
        material={materials['Material.001']}
        position={[0, -0.174, 0.641]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.643, 4.892, 0.643]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.MY1.geometry}
        material={materials.MY1}
        position={[0.506, -0.486, 1.19]}
        rotation={[Math.PI / 2, 0, -0.005]}
        scale={[6.872, 1, 6.102]}
      />
      <mesh
      castShadow
        receiveShadow 
        geometry={nodes.MY2.geometry}
        material={materials.MY2}
        position={[0.28, -0.798, 1.29]}
        rotation={[Math.PI / 2, 0, -3.113]}
        scale={[5.229, 1.01, 5.192]}
      />
    </group>
  )
}
function animate(){
  MY1.rotateY(1.2);
}
export default Model;
useGLTF.preload('/model/untitled.glb');
